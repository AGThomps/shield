akka {
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  extensions = ["shield.config.Settings"]
  log-config-on-start = off
  actor {
    debug {
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = off

      # enable DEBUG logging of unhandled messages
      unhandled = on
    }
  }
}
spray.can {
  pipelining-limit = 8
  server {
    remote-address-header = on
  }
  host-connector {
    max-retries = 0
    max-connections = 1024
    pipelining = on
  }
}
logger.root = INFO

shield {
  service-name: "shield"
  port: 8080

  paths {
    healthcheck: "/healthcheck"
    metrics: "/metrics"
    swagger1: "/api-docs"
    swagger2: "/spec"
  }

  trust-proxies: 0
  trust-x-forwarded-proto: false

  domain-watcher: StaticDomainWatcher

  s3-domain-watcher {
    bucket-name: "s3-domains-bucket-name"
    config-filename: "domains.conf"
    refresh-interval: 30s
  }

  domains = [
    {
      domain-name: "localhost"

      middleware-chain = [
        {id: localratelimit, sla: 20 ms, builder: BucketRateLimitBuilder},
        {id: localhttpcache, sla: 20 ms, builder: ResponseCacheBuilder}
      ]

      listeners = [
        {id: consoleLogger, builder: ConsoleLogBuilder}
      ]

      listener-config {
        consoleLogger {

        }
      }

      upstream-watcher: StaticUpstreamWatcher
      upstream-weighting: {
        step-count: 100
        step-duration: 6 seconds
      }

      s3-upstream-watcher {
        bucket-name: "s3-bucket-name"
        config-filename: "shield_config.json"
        refresh-interval: 30s
      }

      consul-watcher {
        swagger1-key: "/shield/swagger1"
        swagger2-key: "/shield/swagger2"
        host: "http://example.com:8500"
      }

      upstreams = [
        {serviceType: "swagger2", serviceLocation: "https://example.com"}
      ]

      middleware {
        localratelimit {
          bypass-header: bypassratelimit
          calls-per: 10000
          per-seconds: 1
          kvstore: memory
        }
        localhttpcache {
          kvstore: memory
        }
      }

      log {
        request-headers:  [ "user-agent", "client-address" ]
        response-headers: [ ]
      }

      kvstores {
        memory {
          type: memory
          maxHashCapacity: 10000
          maxKeyCapacity: 10000
          maxLimitCapacity: 10000
        }
      }

      ignoreExtensions: [ ]
    }
  ]

}

